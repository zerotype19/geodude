{
  "version": 3,
  "sources": ["../../../../../packages/shared/src/token.ts", "../../../../../packages/shared/src/url.ts", "../../../src/index.ts", "../../../../../../../.nvm/versions/node/v20.19.3/lib/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../../../../../.nvm/versions/node/v20.19.3/lib/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-WWQBzv/middleware-insertion-facade.js", "../../../../../../../.nvm/versions/node/v20.19.3/lib/node_modules/wrangler/templates/middleware/common.ts", "../bundle-WWQBzv/middleware-loader.entry.ts"],
  "sourceRoot": "/Users/kevinmcgovern/geodude/geodude/apps/geodude-api/.wrangler/tmp/dev-gDRkfM",
  "sourcesContent": ["export async function verifyToken(token: string, secret: string) {\n  const [b64, sig] = token.split(\".\");\n  if (!b64 || !sig) throw new Error(\"bad token format\");\n\n  const key = await crypto.subtle.importKey(\n    \"raw\",\n    new TextEncoder().encode(secret),\n    { name: \"HMAC\", hash: \"SHA-256\" },\n    false,\n    [\"sign\"]\n  );\n  const mac = await crypto.subtle.sign(\n    \"HMAC\",\n    key,\n    new TextEncoder().encode(b64)\n  );\n  const esig = btoa(String.fromCharCode(...new Uint8Array(mac)))\n    .replace(/\\+/g, \"-\")\n    .replace(/\\//g, \"_\")\n    .replace(/=+$/,\"\");\n  if (esig !== sig) throw new Error(\"bad signature\");\n  const payload = JSON.parse(atob(b64));\n  if (payload.exp && Date.now()/1000 > payload.exp) throw new Error(\"expired\");\n  return payload as Record<string, unknown>;\n}\n", "export function ensureUTMs(dest: URL, src: string, pid?: string) {\n  if (!dest.searchParams.has(\"utm_source\")) {\n    dest.searchParams.set(\"utm_source\", `ai_${src}`);\n    dest.searchParams.set(\"utm_medium\", \"ai_recommendation\");\n    if (pid) dest.searchParams.set(\"utm_campaign\", String(pid));\n  }\n  return dest;\n}\n", "import { verifyToken } from \"@geodude/shared\";\nimport { ensureUTMs } from \"@geodude/shared\";\n\ntype Env = {\n  HMAC_KEY: string;\n  INGEST_API_KEY: string;\n  GEO_DB: D1Database;\n  AI_CAPTURES: R2Bucket;\n  DEST_MAP: KVNamespace;\n  CANONICAL_BASE: string;\n};\n\nexport default {\n  async fetch(req: Request, env: Env, ctx: ExecutionContext) {\n    const url = new URL(req.url);\n\n    // 1) Health\n    if (url.pathname === \"/health\") {\n      return new Response(\"ok\", { status: 200 });\n    }\n\n    // 2) Tokenized redirector: /r/:token\n    if (url.pathname.startsWith(\"/r/\")) {\n      const token = url.pathname.split(\"/\").pop()!;\n      try {\n        const payload = await verifyToken(token, env.HMAC_KEY);\n        const destUrl = await resolveDest(payload, env); // throws if unknown\n\n        // session + ai_ref cookies\n        const headers = new Headers();\n        const sid = getOrSetSession(req, headers);\n        headers.append(\"Set-Cookie\", `ai_ref=1; Path=/; Max-Age=${14 * 86400}; SameSite=Lax`);\n\n        // append UTMs\n        const dest = new URL(destUrl);\n        ensureUTMs(dest, String(payload[\"src\"] ?? \"unknown\"), payload[\"pid\"] as string | undefined);\n\n        // minimally write to D1 synchronously (Queues later)\n        await insertClick(env.GEO_DB, {\n          ts: Date.now(),\n          src: String(payload[\"src\"] ?? null),\n          model: (payload[\"model\"] as string) ?? null,\n          pid: (payload[\"pid\"] as string) ?? null,\n          geo: (payload[\"geo\"] as string) ?? null,\n          ua: req.headers.get(\"user-agent\"),\n          ip: req.headers.get(\"cf-connecting-ip\"),\n          asn: (req as any).cf?.asn ? String((req as any).cf.asn) : null,\n          dest: dest.toString(),\n          session_id: sid\n        });\n\n        // Create redirect response with headers\n        const resp = new Response(null, {\n          status: 302,\n          headers: {\n            \"Location\": dest.toString(),\n            ...Object.fromEntries(headers.entries())\n          }\n        });\n        return resp;\n      } catch (e: any) {\n        return new Response(`bad token or dest: ${e?.message ?? \"\"}`, { status: 400 });\n      }\n    }\n\n    // 3) Event ingest: POST /v1/events  (direct-to-D1 MVP)\n    if (url.pathname === \"/v1/events\" && req.method === \"POST\") {\n      if (req.headers.get(\"authorization\") !== `Bearer ${env.INGEST_API_KEY}`) {\n        return new Response(\"unauthorized\", { status: 401 });\n      }\n      const batch = await req.json().catch(() => null);\n      if (!Array.isArray(batch)) return new Response(\"expected array\", { status: 400 });\n\n      let inserted = 0;\n      try {\n        for (const ev of batch) {\n          if (!ev?.type || !ev?.payload) continue;\n          switch (ev.type) {\n            case \"conversion\":\n              await env.GEO_DB\n                .prepare(\n                  `INSERT INTO conversion_event (ts, session_id, type, value_cents, meta)\n                   VALUES (?1, ?2, ?3, ?4, ?5)`\n                )\n                .bind(\n                  ev.payload.ts ?? Date.now(),\n                  ev.payload.session_id ?? null,\n                  ev.payload.type ?? \"custom\",\n                  ev.payload.value_cents ?? null,\n                  ev.payload.meta ? JSON.stringify(ev.payload.meta) : null\n                )\n                .run();\n              inserted++;\n              break;\n            case \"crawler\":\n              await env.GEO_DB\n                .prepare(\n                  `INSERT INTO crawler_visit (ts, ua, ip, asn, family, hit_type, path, status)\n                   VALUES (?1, ?2, ?3, ?4, ?5, ?6, ?7, ?8)`\n                )\n                .bind(\n                  ev.payload.ts ?? Date.now(),\n                  ev.payload.ua ?? null,\n                  ev.payload.ip ?? null,\n                  ev.payload.asn ?? null,\n                  ev.payload.family ?? \"unknown\",\n                  ev.payload.hit_type ?? \"unknown\",\n                  ev.payload.path ?? null,\n                  ev.payload.status ?? null\n                )\n                .run();\n              inserted++;\n              break;\n            default:\n              // ignore unknown types for now\n              break;\n          }\n        }\n      } catch (e) {\n        return new Response(\"db error\", { status: 500 });\n      }\n      return Response.json({ ok: true, inserted });\n    }\n\n    // 0) Overview metrics (simple counts for dashboard smoke test)\n    if (url.pathname === \"/overview\" && req.method === \"GET\") {\n      const q = (sql: string) => env.GEO_DB.prepare(sql).first<any>();\n      const [clicks, convs, crawls, cites] = await Promise.all([\n        q(\"SELECT COUNT(*) AS c FROM edge_click_event\"),\n        q(\"SELECT COUNT(*) AS c FROM conversion_event\"),\n        q(\"SELECT COUNT(*) AS c FROM crawler_visit\"),\n        q(\"SELECT COUNT(*) AS c FROM ai_citation_event\")\n      ]);\n      return Response.json({\n        clicks: clicks?.c ?? 0,\n        conversions: convs?.c ?? 0,\n        crawler_visits: crawls?.c ?? 0,\n        citations: cites?.c ?? 0\n      });\n    }\n\n    return new Response(\"not found\", { status: 404 });\n  }\n};\n\nfunction getOrSetSession(req: Request, headers: Headers) {\n  const cookies = req.headers.get(\"cookie\") || \"\";\n  const m = cookies.match(/sid=([A-Za-z0-9_-]+)/);\n  const sid = m?.[1] ?? crypto.randomUUID();\n  if (!m) headers.append(\"Set-Cookie\", `sid=${sid}; Path=/; Max-Age=${30 * 86400}; SameSite=Lax`);\n  return sid;\n}\n\nfunction requireCanonicalBase(env: { CANONICAL_BASE?: string }) {\n  const base = env.CANONICAL_BASE?.trim();\n  if (!base) throw new Error(\"CANONICAL_BASE is not configured\");\n  return new URL(\"/\", base).toString();\n}\n\nasync function resolveDest(payload: Record<string, unknown>, env: Env): Promise<string> {\n  // Rule: if pid exists and a KV mapping exists, use it; else fall back to CANONICAL_BASE\n  const pid = (payload[\"pid\"] as string) || \"\";\n  if (pid) {\n    const mapped = await env.DEST_MAP.get(pid);\n    if (mapped) return mapped;\n  }\n  const base = requireCanonicalBase(env); // throws if missing\n  return new URL(\"/\", base).toString();\n}\n\nasync function insertClick(db: D1Database, row: any) {\n  await db\n    .prepare(\n      `INSERT INTO edge_click_event\n       (ts, src, model, pid, geo, ua, ip, asn, dest, session_id)\n       VALUES (?1, ?2, ?3, ?4, ?5, ?6, ?7, ?8, ?9, ?10)`\n    )\n    .bind(\n      row.ts,\n      row.src,\n      row.model,\n      row.pid,\n      row.geo,\n      row.ua,\n      row.ip,\n      row.asn,\n      row.dest,\n      row.session_id\n    )\n    .run();\n}\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/Users/kevinmcgovern/geodude/geodude/apps/geodude-api/src/index.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/Users/kevinmcgovern/.nvm/versions/node/v20.19.3/lib/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/Users/kevinmcgovern/.nvm/versions/node/v20.19.3/lib/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/Users/kevinmcgovern/geodude/geodude/apps/geodude-api/src/index.ts\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/kevinmcgovern/geodude/geodude/apps/geodude-api/.wrangler/tmp/bundle-WWQBzv/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/Users/kevinmcgovern/.nvm/versions/node/v20.19.3/lib/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/kevinmcgovern/geodude/geodude/apps/geodude-api/.wrangler/tmp/bundle-WWQBzv/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/kevinmcgovern/geodude/geodude/apps/geodude-api/.wrangler/tmp/bundle-WWQBzv/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": []
}
